sammy_restrictions.scala:40: error: type mismatch;
 found   : () => Int
 required: NoAbstract
  def f0 = (() => 0)      : NoAbstract
               ^
sammy_restrictions.scala:41: error: type mismatch;
 found   : Int => Int
 required: TwoAbstract
  def f1 = ((x: Int) => 0): TwoAbstract
                     ^
sammy_restrictions.scala:42: error: type mismatch;
 found   : Int => Int
 required: NoEmptyConstructor
  def f2 = ((x: Int) => 0): NoEmptyConstructor
                     ^
sammy_restrictions.scala:43: error: type mismatch;
 found   : Int => Int
 required: MultipleConstructorLists
  def f3 = ((x: Int) => 0): MultipleConstructorLists
                     ^
sammy_restrictions.scala:44: error: type mismatch;
 found   : Int => Int
 required: OneEmptySecondaryConstructor
  def f4 = ((x: Int) => 0): OneEmptySecondaryConstructor // derived class must have an empty *primary* to call.
                     ^
sammy_restrictions.scala:45: error: type mismatch;
 found   : Int => Int
 required: MultipleMethodLists
  def f5 = ((x: Int) => 0): MultipleMethodLists
                     ^
sammy_restrictions.scala:46: error: type mismatch;
 found   : Int => Int
 required: ImplicitConstructorParam
  def f6 = ((x: Int) => 0): ImplicitConstructorParam
                     ^
sammy_restrictions.scala:47: error: type mismatch;
 found   : Int => Int
 required: ImplicitMethodParam
  def f7 = ((x: Int) => 0): ImplicitMethodParam
                     ^
sammy_restrictions.scala:48: error: type mismatch;
 found   : Int => Int
 required: PolyMethod
  def f8 = ((x: Int) => 0): PolyMethod
                     ^
sammy_restrictions.scala:49: error: type mismatch;
 found   : Int => Int
 required: SelfTp
  def f9 = ((x: Int) => 0): SelfTp
                     ^
sammy_restrictions.scala:50: error: type mismatch;
 found   : Int => Int
 required: T1 with U1
  def g0 = ((x: Int) => 0): T1 with U1
                     ^
sammy_restrictions.scala:51: error: type mismatch;
 found   : Int => Int
 required: Test.NonClassTypeRefinement
    (which expands to)  DerivedOneAbstract with OneAbstract
  def g1 = ((x: Int) => 0): NonClassTypeRefinement
                     ^
sammy_restrictions.scala:52: error: type mismatch;
 found   : Int => Int
 required: Test.NonOverridingMethodRefinement
    (which expands to)  OneAbstract{def apples(): Int}
  def h1 = ((x: Int) => 0): NonOverridingMethodRefinement
                     ^
sammy_restrictions.scala:53: error: type mismatch;
 found   : Int => Int
 required: Test.OverridingMethodRefinement
    (which expands to)  OneAbstract{def ap(a: Int): Int}
  def h2 = ((x: Int) => 0): OverridingMethodRefinement
                     ^
14 errors
